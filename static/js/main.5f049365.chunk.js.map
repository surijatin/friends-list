{"version":3,"sources":["components/RowComponent/RowComponent.js","components/PaginationComponent/PaginationComponent.js","components/ListComponent/List.js","index.js"],"names":["RowComponent","props","friend","handleFavourite","handleDelete","className","name","src","isFavourite","alt","onClick","e","id","PaginationComponent","page","handlePagination","totalPages","Array","from","map","x","index","List","useState","friends","setFriends","displayFriends","setDisplay","setName","currPage","setPage","event","selectedId","newFriends","sort","item1","item2","sortFriends","item","prevState","filter","computeTotalPages","arr","Math","ceil","length","chunkToDisplay","reduce","resultArr","chunkIndex","floor","push","computeChunk","type","onChange","nameEntered","target","value","match","filteredList","showResult","split","forEach","toLowerCase","includes","onKeyUp","key","newObj","random","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f049365.chunk.js","sourcesContent":["import './RowComponent.css';\n\nfunction RowComponent(props) {\n    const { friend, handleFavourite, handleDelete } = props;\n    return (\n        <div className=\"row-component\">\n            <div className=\"name\">\n                <h3>{friend.name}</h3>\n                <h6>is your friend</h6>\n            </div>\n            <img\n                src={friend.isFavourite ? './star-fill.png' : './star.png'}\n                alt={\"Favourite Icon\"}\n                onClick={(e) => {\n                    handleFavourite(e, friend.id);\n                }} />\n            <img\n                src={'./delete.png'}\n                alt={\"Bin Icon\"}\n                onClick={(e) => {\n                    handleDelete(e, friend.id);\n                }} />\n        </div>\n    );\n}\n\nexport default RowComponent;\n","import './PaginationComponent.css';\n\nfunction PaginationComponent(props) {\n    const { page, handlePagination } = props;\n    return (\n        <>\n            {\n                page.totalPages > 1 &&\n                Array.from(Array(page.totalPages)).map((x, index) => {\n                    return (\n                        <button key={index} id={index + 1} onClick={handlePagination} className={'pagination-button'}>{index + 1}</button>\n                    )\n                })\n            }\n        </>\n    );\n}\n\nexport default PaginationComponent;\n","import { useState } from 'react';\nimport './List.css';\nimport RowComponent from '../RowComponent/RowComponent';\nimport PaginationComponent from '../PaginationComponent/PaginationComponent';\n\nconst recordsPerList = 4;\n\nfunction List() {\n  const [friends, setFriends] = useState([]);\n  const [displayFriends, setDisplay] = useState([]);\n  const [name, setName] = useState('');\n  const [page, setPage] = useState({\n    currPage: 1,\n    totalPages: 1\n  });\n\n  const handleFriendSearch = (event) => {\n    const regex = /^[A-Za-z ]+$/;\n    const nameEntered = event.target.value;\n    if (nameEntered.match(regex) || nameEntered === \"\") {\n      setName(nameEntered);\n      const filteredList = friends.filter(item => {\n        let showResult = false;\n        const nameArr = item.name.split(' ');\n        nameArr.forEach((name) => {\n          if (name.toLowerCase().includes(nameEntered.toLowerCase())) {\n            showResult = true;\n          };\n        });\n        return showResult;\n      });\n      setDisplay(filteredList);\n    }\n  }\n\n  const sortFriends = (friends) => {\n    return friends.sort((item1, item2) => item2.isFavourite - item1.isFavourite);\n  }\n\n  const handleFavourite = (event, selectedId) => {\n    let newFriends = [...friends];\n    newFriends = newFriends.map((item) => {\n      if (item.id === selectedId) {\n        return {\n          ...item,\n          isFavourite: !item.isFavourite\n        }\n      }\n      return item\n    });\n    newFriends = sortFriends(newFriends);\n    setPage(prevState => {\n      return {\n        currPage: 1,\n        totalPages: prevState.totalPages\n      }\n    });\n    setFriends(newFriends);\n  }\n\n  const handleDelete = (event, selectedId) => {\n    let newFriends = friends.filter(item => item.id !== selectedId);\n    setFriends(newFriends);\n    setPage(prevState => {\n      return {\n        currPage: prevState.currPage,\n        totalPages: computeTotalPages(newFriends)\n      }\n    });\n  }\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter' && event.target.value !== '') {\n      const name = event.target.value;\n      const newObj = {\n        id: Math.random(),\n        name,\n        isFavourite: false\n      }\n      const newFriends = [...friends, newObj];\n      setPage({ currPage: 1, totalPages: computeTotalPages(newFriends) });\n      setFriends(newFriends);\n      setName('');\n    }\n  }\n\n  const computeTotalPages = (arr) => {\n    return Math.ceil(arr.length / recordsPerList);\n  }\n\n  const handlePagination = (event) => {\n    setPage(prevState => {\n      return {\n        currPage: event.target.id,\n        totalPages: prevState.totalPages\n      }\n    });\n  }\n\n  const computeChunk = (arr) => {\n    let finalData = arr.reduce((resultArr, item, index) => {\n      const chunkIndex = Math.floor(index / recordsPerList);\n      if (!resultArr[chunkIndex]) {\n        resultArr[chunkIndex] = [];\n      }\n      resultArr[chunkIndex].push(item);\n      return resultArr;\n    }, []);\n    return finalData[page.currPage - 1];\n  }\n\n  const arr = name === '' ? friends : displayFriends;\n\n  const chunkToDisplay = computeChunk(arr);\n\n  return (\n    <>\n      <div className='container'>\n        <input\n          className={'input-text'}\n          type={'text'}\n          onChange={handleFriendSearch}\n          onKeyUp={handleKeyDown}\n          value={name}\n          placeholder={'Enter your friend\\'s name'} />\n        {\n          chunkToDisplay ? chunkToDisplay.map(item =>\n          (\n            <RowComponent\n              key={item.id}\n              friend={item}\n              handleFavourite={handleFavourite}\n              handleDelete={handleDelete}\n            />\n          )) :\n            name && <label>Press Enter â†µ to add new friend</label>\n        }\n      </div>\n      <PaginationComponent\n        page={page}\n        handlePagination={handlePagination}\n      />\n    </>\n  )\n}\n\nexport default List;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport List from './components/ListComponent/List';\n\nReactDOM.render(\n  <React.StrictMode>\n    <List />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}